enclave {
	
    include "sgx_key_exchange.h"
    include "sgx_trts.h"

	from "sgx_tsgxssl.edl" import *;
	from "common_enclave.edl" import *;
    from "sgx_tkey_exchange.edl" import *;

	trusted 
	{
		public void ecall_initializer_list_demo(void);

		public void ecall_square_array([in, out, size=len_in_byte] int* arr, size_t len_in_byte);

		public int ecall_add_two_int(int a, int b);

		//RA Functions:
		public void ecall_set_remote_ra_pub_keys([in] const sgx_ec256_public_t* inPubKey);

		public sgx_status_t ecall_generate_ra_keys();

		public sgx_status_t ecall_get_ra_pub_keys([out] sgx_ec256_public_t* outPubKey);

		public sgx_status_t ecall_enclave_init_ra(int b_pse, [out] sgx_ra_context_t *p_context);

		public sgx_status_t ecall_process_msg1([in] const sgx_ra_msg1_t *inMsg1, [out] sgx_ra_msg2_t *outMsg2);


	};

};
